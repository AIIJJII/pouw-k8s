apiVersion: v1
kind: Pod
metadata:
  name: test-pod
  labels:
    env: test
spec:
  volumes:
  - name: pouw-pv-storage
    persistentVolumeClaim:
      claimName: pouw-pv-claim  
  - name: pouw-bucket-pv-storage
    persistentVolumeClaim:
      claimName: pouw-bucket-pv-claim
  - name: paicoin-datadir
    emptyDir: {}
  - name: paicoin-config
    configMap:
      name: paicoin-config-map
      items:
      - key: chainparams.conf
        path: chainparams.conf
      - key: paicoin.conf
        path: paicoin.conf
  containers:
  - name: pouw-miner
    image: pouw-consensus:dev
    volumeMounts:
    - mountPath: "/usr/share/pouw-data"
      name: pouw-pv-storage
    - mountPath: "/usr/share/pouw-bucket"
      name: pouw-bucket-pv-storage
    - mountPath: /root/.paicoin
      name: paicoin-config
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "echo $MY_POD_IP $MY_POD_NAME $MY_ROLE >> /usr/share/pouw-data/nodes"]
      preStop:
        exec:
          command: ["/bin/sh","-c","sed -i /^$MY_POD_IP/d /usr/share/pouw-data/nodes"]
    env:
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: MY_ROLE
      value: "miner"
    - name: PAICOIND_IP
      valueFrom:
        configMapKeyRef:
          name: settings-map
          key: PAICOIND_IP
    - name: REDIS_PORT
      valueFrom:
        configMapKeyRef:
          name: settings-map
          key: REDIS_PORT
    - name: POUW_BUCKET
      valueFrom:
        configMapKeyRef:
          name: settings-map
          key: POUW_BUCKET
    command: ["/bin/sh", "-c"]
    args: ["while [ -z \"${REDIS_HOST}\" ]; do REDIS_HOST=$(sed '/supervisor/!d;q' /usr/share/pouw-data/nodes | sed 's/ .*//'); sleep 5; done && echo \"export REDIS_HOST=\"$REDIS_HOST\"\" >> ~/.bashrc && sed -i 's/(BLOCK_COMMITMENT_INERATIONS_ANNOUNCED/(4/g' /opt/main-iteration/pai/pouw/nodes/decentralized/worker.py && cd /opt/main-iteration && python3.7 setup.py develop --uninstall && python3.7 setup.py develop && python3.7 /opt/main-iteration/pai/pouw/nodes/decentralized/worker.py --redis-host $REDIS_HOST --redis-port $REDIS_PORT --server-ip $PAICOIND_IP --paicoin-cfg-file /root/.paicoin/paicoin.conf --debug True"]
    imagePullPolicy: Never
  - name: pouw-miner-verifier
    image: pouw-consensus:dev
    volumeMounts:
    - mountPath: "/usr/share/pouw-data"
      name: pouw-pv-storage
    - mountPath: "/usr/share/pouw-bucket"
      name: pouw-bucket-pv-storage
    env:
    - name: REDIS_PORT
      valueFrom:
        configMapKeyRef:
          name: settings-map
          key: REDIS_PORT
    - name: POUW_BUCKET
      valueFrom:
        configMapKeyRef:
          name: settings-map
          key: POUW_BUCKET
    command: ["/bin/sh", "-c"]
    args: ["while [ -z \"${REDIS_HOST}\" ]; do REDIS_HOST=$(sed '/supervisor/!d;q' /usr/share/pouw-data/nodes | sed 's/ .*//'); sleep 5; done && echo \"export REDIS_HOST=\"$REDIS_HOST\"\" >> ~/.bashrc && sed -i 's/error_code, reason = verify_block_commitment(conn, msg_id, worker_id, block_header)/error_code, reason = None, None/g' /opt/main-iteration/pai/pouw/verification/verifier.py && cd /opt/main-iteration && python3.7 setup.py develop --uninstall && python3.7 setup.py develop && python3.7 /opt/main-iteration/pai/pouw/verification/server.py --redis-host $REDIS_HOST --redis-port $REDIS_PORT"]
    imagePullPolicy: Never
  - name: pouw-miner-blockchain
    image: pouw-blockchain:dev
    command: ["/bin/sh", "-c"]
    args: ["paicoind -mine-genesis-block && paicoind -add-nodes=/usr/share/pouw-data/nodes -own-ip=$MY_POD_IP"]
    volumeMounts:
      - mountPath: "/usr/share/pouw-data"
        name: pouw-pv-storage
      - mountPath: /root/data
        name: paicoin-datadir
      - mountPath: /root/.paicoin
        name: paicoin-config
    env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    imagePullPolicy: Never